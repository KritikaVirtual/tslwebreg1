"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TaskBoardColumn = void 0;
var React = require("react");
var kendo_react_common_1 = require("@progress/kendo-react-common");
var constants_1 = require("./../constants");
var TaskBoardTaskEditPane_1 = require("../TaskBoardTaskEditPane");
/**
 * Represents the TaskBoardColumn component.
 */
var TaskBoardColumn = function (props) {
    var _a;
    return (React.createElement(React.Fragment, null,
        React.createElement("div", __assign({ ref: props.elementRef, style: props.style, className: (0, kendo_react_common_1.classNames)('k-taskboard-column', {
                'k-taskboard-column-edit': props.column.edit
            }), tabIndex: props.tabIndex }, (_a = {},
            _a[constants_1.TASKBOARD_ITEM_TYPE] = constants_1.TASKBOARD_COLUMN,
            _a[constants_1.TASKBOARD_ITEM_ID] = props.column.id,
            _a)),
            React.createElement(props.header, { column: props.column, tasks: props.tasks, onTitleChange: props.onTitleChange, onColumnExitEdit: props.onColumnExitEdit, editButtonTitle: props.editButtonTitle, onColumnEnterEdit: props.onColumnEnterEdit, addButtonTitle: props.addButtonTitle, onShowAddCardDialog: props.onShowAddCardDialog, closeButtonTitle: props.closeButtonTitle, onColumnDelete: props.onColumnDelete }),
            React.createElement(props.body, null, props.children)),
        props.showAddCard && (React.createElement(props.addCardDialog, { onClose: props.onCloseDialog, onSave: props.onTaskCreate, priorities: props.priorities, editPane: TaskBoardTaskEditPane_1.TaskBoardTaskEditPane })),
        props.showEditCard && props.editedTask && (React.createElement(props.editCardDialog, { onClose: props.onCloseDialog, onSave: props.onTaskEdit, task: props.editedTask, priorities: props.priorities, editPane: TaskBoardTaskEditPane_1.TaskBoardTaskEditPane })),
        props.showColumnConfirmDelete && (React.createElement(props.confirmDialog, { onClose: props.onColumnDelete, onConfirm: props.onColumnConfirmDelete, dialogMessage: props.confirmDialogMessage, dialogTitle: props.confirmDialogTitle, dialogConfirmButton: props.confirmDialogConfirmButton, dialogCancelButton: props.confirmDialogCancelButton }))));
};
exports.TaskBoardColumn = TaskBoardColumn;
exports.TaskBoardColumn.displayName = 'KendoReactTaskBoardColumn';
