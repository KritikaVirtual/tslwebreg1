"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TaskBoardColumnHeader = void 0;
var React = require("react");
var kendo_react_buttons_1 = require("@progress/kendo-react-buttons");
var kendo_react_inputs_1 = require("@progress/kendo-react-inputs");
var kendo_react_common_1 = require("@progress/kendo-react-common");
var kendo_svg_icons_1 = require("@progress/kendo-svg-icons");
/**
 * Represents the TaskBoardColumnHeader component.
 */
var TaskBoardColumnHeader = function (props) {
    var _a = props.column, edit = _a.edit, title = _a.title;
    return (React.createElement("div", { className: 'k-taskboard-column-header' },
        React.createElement("div", { className: 'k-taskboard-column-header-text k-text-ellipsis' }, edit ? (React.createElement(kendo_react_inputs_1.Input, { value: title, onChange: props.onTitleChange, onBlur: props.onColumnExitEdit, autoFocus: true })) : title),
        React.createElement("span", { className: 'k-spacer' }),
        React.createElement("div", { className: (0, kendo_react_common_1.classNames)('k-taskboard-column-header-actions', { 'k-disabled': edit }) },
            React.createElement(kendo_react_buttons_1.Button, { fillMode: "flat", icon: "pencil", svgIcon: kendo_svg_icons_1.pencilIcon, title: props.editButtonTitle, onClick: props.onColumnEnterEdit }),
            React.createElement(kendo_react_buttons_1.Button, { fillMode: "flat", icon: "plus", svgIcon: kendo_svg_icons_1.plusIcon, title: props.addButtonTitle, onClick: props.onShowAddCardDialog }),
            React.createElement(kendo_react_buttons_1.Button, { fillMode: "flat", icon: "x", svgIcon: kendo_svg_icons_1.xIcon, title: props.closeButtonTitle, onClick: props.onColumnDelete }))));
};
exports.TaskBoardColumnHeader = TaskBoardColumnHeader;
exports.TaskBoardColumnHeader.displayName = 'KendoReactTaskBoardColumnHeader';
