import * as React from 'react';
import { TaskBoardCardProps } from './card/Card';
import { TaskBoardColumnProps } from './column/Column';
/**
 * Represent the target(props) of the TaskBoardHandle.
 */
export interface TaskBoardHandle {
    /**
     * The props values of the TackBoard.
     */
    props: TaskBoardProps;
}
/**
 * Represents the target of the TaskBoardPriority.
 */
export interface TaskBoardPriority {
    /**
     * Represents the priority of a TaskBoard.
     */
    priority: string;
    /**
     * Represents the color of a TaskBoard.
     */
    color: string;
}
/**
 * Represent the item model.
 */
interface ItemModel {
    /**
     * Sets the `id` of an ItemModel.
     */
    id: string | number | undefined;
    /**
     * Determines the title of an ItemModel.
     */
    title: string;
    /**
     * Determines the status of an ItemModel.
     */
    status: string;
    /**
     * Determines of an ItemModel is going to edited.
     */
    edit?: boolean;
    /**
     * @hidden
     */
    isPlaceholder?: boolean;
}
/**
 * Represents the task board column model.
 */
export interface TaskBoardColumnModel extends ItemModel {
}
/**
 * Represents the task board task model.
 */
export interface TaskBoardTaskModel extends ItemModel {
    /**
     * Determined the description of the TaskBoardTaskModel.
     */
    description: string;
    /**
     * Determined the priority of the TaskBoardTaskModel.
     */
    priority: TaskBoardPriority;
}
/**
 * Represents the return type of TaskBoardChangeEvent.
 */
export interface TaskBoardChangeEvent {
    /**
     * Determines the returned data.
     */
    data: {}[] | TaskBoardTaskModel[];
    /**
     * Determines the returned type.
     */
    type: string;
    /**
     * Represents the previous item.
     */
    previousItem: TaskBoardColumnModel | TaskBoardTaskModel | null;
    /**
     * Represents the current item.
     */
    item: TaskBoardColumnModel | TaskBoardTaskModel | null;
}
/**
 * Represents the props of the TaskBoard component
 */
export interface TaskBoardProps {
    /**
     * Specifies the column data from type TaskBoardColumnModel.
     */
    columnData: TaskBoardColumnModel[];
    /**
     * Represents the task data from type TaskBoardTaskModel.
     */
    taskData: TaskBoardTaskModel[];
    /**
     * Specifies the priorities of the task board.
     */
    priorities: TaskBoardPriority[];
    /**
     * Specifies a list of CSS classes that will be added to the TaskBoard element.
     */
    className?: string | Array<string>;
    /**
     * Specifies the id that will be added to the TaskBoard element.
     */
    id?: string;
    /**
     * Specifies the `tabIndex` that will be added to the TaskBoard Column and Card elements.
     */
    tabIndex?: number;
    /**
     * Represents the styles that are applied to the TaskBoard.
     */
    style?: React.CSSProperties;
    /**
     * The React elements that will be rendered inside the toolbar of the TaskBoard.
     */
    children?: React.ReactNode;
    /**
     * Represents the `onChange` event. Triggered after tasks changes.
     */
    onChange: (event: TaskBoardChangeEvent) => void;
    /**
     * Represents the TaskBoardCard component.
     */
    card?: React.ComponentType<TaskBoardCardProps>;
    /**
     * Represents the TaskBoardColumn component.
     */
    column?: React.ComponentType<TaskBoardColumnProps>;
}
/**
 * Represents the [KendoReact TaskBoard component]({% slug overview_taskboard %}).
 *
 * Accepts properties of type [TaskBoardProps]({% slug api_taskboard_taskboardprops %}).
 */
export declare const TaskBoard: React.ForwardRefExoticComponent<TaskBoardProps & React.RefAttributes<TaskBoardHandle | null>>;
export {};
