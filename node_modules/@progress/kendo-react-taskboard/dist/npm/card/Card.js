"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TaskBoardCard = void 0;
var React = require("react");
var kendo_react_common_1 = require("@progress/kendo-react-common");
var constants_1 = require("../constants");
/**
 * Represents the TaskBoardCard component.
 */
var TaskBoardCard = function (props) {
    var _a;
    return (React.createElement(React.Fragment, null,
        React.createElement(props.card, __assign({ key: String(props.task.id), ref: props.elementRef, style: props.style, className: (0, kendo_react_common_1.classNames)('k-taskboard-card k-cursor-move k-taskboard-card-category', {
                'k-disabled': props.disabled
            }) }, (_a = {},
            _a[constants_1.TASKBOARD_ITEM_TYPE] = constants_1.TASKBOARD_TASK,
            _a[constants_1.TASKBOARD_ITEM_ID] = props.task.id,
            _a.tabIndex = props.tabIndex,
            _a)),
            React.createElement(props.cardHeader, { showMenu: props.showMenu, menuItems: props.menuItems, popupRef: props.popupRef, title: props.task.title, task: props.task, onShowPreviewPane: props.onShowPreviewPane, onShowMenu: props.onShowMenu, onHideMenu: props.onHideMenu, onMenuButtonBlur: props.onMenuButtonBlur, onMenuItemSelect: props.onMenuItemSelect }),
            React.createElement(props.cardBody, { task: props.task }, props.task.description)),
        props.showDeleteConfirm && (React.createElement(props.confirmDialog, { onConfirm: props.onTaskDelete, onClose: props.onCloseConfirmDialog, dialogMessage: props.confirmDialogMessage, dialogTitle: props.confirmDialogTitle, dialogConfirmButton: props.confirmDialogConfirmButton, dialogCancelButton: props.confirmDialogCancelButton })),
        props.showTaskPreviewPane && (React.createElement(props.previewDialog, { title: props.task.title, description: props.task.description, priorityLabel: props.previewDialogPriorityLabel, delete: props.previewDialogDelete, edit: props.previewDialogEdit, onClosePreviewPane: props.onClosePreviewPane, onTaskDelete: props.onTaskDelete, onTaskEdit: props.onTaskEdit, priority: props.task.priority }))));
};
exports.TaskBoardCard = TaskBoardCard;
exports.TaskBoardCard.displayName = 'KendoReactTaskBoardCard';
