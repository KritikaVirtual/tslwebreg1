"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TaskBoardPreviewDialog = void 0;
var React = require("react");
var kendo_react_buttons_1 = require("@progress/kendo-react-buttons");
var kendo_svg_icons_1 = require("@progress/kendo-svg-icons");
/**
 * Represents the TaskBoardPreviewDialog component.
 */
var TaskBoardPreviewDialog = function (props) {
    return (React.createElement("div", { className: "k-taskboard-pane k-taskboard-preview-pane" },
        React.createElement("div", { className: 'k-taskboard-pane-header' },
            React.createElement("div", { className: 'k-taskboard-pane-header-text' }, props.title),
            React.createElement("span", { className: "k-spacer" }),
            React.createElement("div", { className: "k-taskboard-pane-header-actions" },
                React.createElement(kendo_react_buttons_1.Button, { icon: 'x', svgIcon: kendo_svg_icons_1.xIcon, fillMode: "flat", onClick: props.onClosePreviewPane }))),
        React.createElement("div", { className: "k-taskboard-pane-content" },
            React.createElement("p", null, props.description),
            React.createElement("p", null,
                props.priorityLabel,
                "\u00A0",
                React.createElement("span", { style: { backgroundColor: props.priority.color } }, "\u00A0"),
                "\u00A0",
                props.priority.priority)),
        React.createElement("div", { className: "k-taskboard-pane-actions k-actions k-hstack k-justify-content-end" },
            React.createElement(kendo_react_buttons_1.Button, { onClick: props.onTaskDelete }, props.delete),
            React.createElement(kendo_react_buttons_1.Button, { themeColor: 'primary', onClick: props.onTaskEdit }, props.edit))));
};
exports.TaskBoardPreviewDialog = TaskBoardPreviewDialog;
exports.TaskBoardPreviewDialog.displayName = 'KendoReactTaskBoardPreviewDialog';
