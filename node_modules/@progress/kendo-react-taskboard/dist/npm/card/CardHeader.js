"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TaskBoardCardHeader = void 0;
var React = require("react");
var kendo_react_buttons_1 = require("@progress/kendo-react-buttons");
var kendo_react_layout_1 = require("@progress/kendo-react-layout");
var kendo_react_popup_1 = require("@progress/kendo-react-popup");
var kendo_svg_icons_1 = require("@progress/kendo-svg-icons");
/**
 * Represents the TaskBoardCardHeader component.
 */
var TaskBoardCardHeader = function (props) {
    var buttonRef = React.useRef();
    return (React.createElement(kendo_react_layout_1.CardHeader, { className: "k-hbox" },
        React.createElement("span", { className: 'k-card-title k-link', onClick: props.onShowPreviewPane }, props.title),
        React.createElement("span", { className: 'k-spacer' }),
        React.createElement("div", { className: 'k-card-header-actions' },
            React.createElement(kendo_react_buttons_1.Button, { fillMode: "flat", icon: "more-vertical", svgIcon: kendo_svg_icons_1.moreVerticalIcon, ref: buttonRef, onClick: props.showMenu ? props.onHideMenu : props.onShowMenu, onBlur: props.onMenuButtonBlur }),
            React.createElement(kendo_react_popup_1.Popup, { anchor: buttonRef.current && buttonRef.current.element, show: props.showMenu, ref: props.popupRef },
                React.createElement(kendo_react_layout_1.Menu, { vertical: true, onSelect: props.onMenuItemSelect, items: props.menuItems, className: 'k-context-menu' })))));
};
exports.TaskBoardCardHeader = TaskBoardCardHeader;
exports.TaskBoardCardHeader.displayName = 'KendoReactTaskBoardCardHeader';
