"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TaskBoardTaskEditPane = void 0;
var React = require("react");
var kendo_react_dropdowns_1 = require("@progress/kendo-react-dropdowns");
var kendo_react_buttons_1 = require("@progress/kendo-react-buttons");
var kendo_react_inputs_1 = require("@progress/kendo-react-inputs");
var kendo_react_labels_1 = require("@progress/kendo-react-labels");
var kendo_react_form_1 = require("@progress/kendo-react-form");
var utils_1 = require("./utils");
var kendo_svg_icons_1 = require("@progress/kendo-svg-icons");
/**
 * Represents the TaskBoardTaskEditPane component.
 */
var TaskBoardTaskEditPane = function (props) {
    return (React.createElement("div", { className: 'k-taskboard-pane k-taskboard-edit-pane' },
        React.createElement("div", { className: 'k-taskboard-pane-header' },
            React.createElement("div", { className: 'k-taskboard-pane-header-text' }, props.header),
            React.createElement("span", { className: "k-spacer" }),
            React.createElement("div", { className: "k-taskboard-pane-header-actions" },
                React.createElement(kendo_react_buttons_1.Button, { icon: 'x', svgIcon: kendo_svg_icons_1.xIcon, fillMode: "flat", onClick: props.onClose }))),
        React.createElement("div", { className: "k-taskboard-pane-content" },
            React.createElement("div", { role: "form", "data-role": "form", className: "k-form" },
                React.createElement(kendo_react_form_1.FieldWrapper, null,
                    React.createElement(kendo_react_labels_1.Label, { editorId: 'title' }, props.titleLabel),
                    React.createElement(kendo_react_inputs_1.Input, { id: 'title', onChange: props.onTitleChange, value: props.title, title: props.titleInputTitle })),
                React.createElement(kendo_react_form_1.FieldWrapper, null,
                    React.createElement(kendo_react_labels_1.Label, { editorId: 'description' }, props.descriptionLabel),
                    React.createElement(kendo_react_inputs_1.Input, { id: 'description', onChange: props.onDescriptionChange, value: props.description, title: props.descriptionInputTitle })),
                React.createElement(kendo_react_form_1.FieldWrapper, null,
                    React.createElement(kendo_react_labels_1.Label, { editorId: 'priority' }, props.priorityLabel),
                    React.createElement(kendo_react_dropdowns_1.DropDownList, { id: 'priority', data: props.priorities, value: props.priority, onChange: props.onPriorityChange, itemRender: utils_1.itemRender, valueRender: utils_1.valueRender, textField: "priority", dataItemKey: "priority", title: props.priorityDropDownTitle })))),
        React.createElement("div", { className: "k-taskboard-pane-actions k-actions k-hstack k-justify-content-end" },
            React.createElement(kendo_react_buttons_1.Button, { onClick: props.onClose }, props.cancelButton),
            React.createElement(kendo_react_buttons_1.Button, { themeColor: 'primary', onClick: props.onSave, disabled: !props.title || !props.description }, props.saveButton))));
};
exports.TaskBoardTaskEditPane = TaskBoardTaskEditPane;
var defaultProps = {};
exports.TaskBoardTaskEditPane.propTypes = {};
exports.TaskBoardTaskEditPane.defaultProps = defaultProps;
exports.TaskBoardTaskEditPane.displayName = 'KendoReactTaskBoardEditPane';
