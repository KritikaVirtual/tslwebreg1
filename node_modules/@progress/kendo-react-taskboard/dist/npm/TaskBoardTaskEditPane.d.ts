import * as React from 'react';
import { DropDownListChangeEvent } from '@progress/kendo-react-dropdowns';
import { InputChangeEvent } from '@progress/kendo-react-inputs';
import { TaskBoardPriority, TaskBoardTaskModel } from './TaskBoard';
/**
 * Represents the props of the TaskBoardTaskEditPane component
 */
export interface TaskBoardTaskEditPaneProps {
    /**
     * Represents the rendered header of the TaskBoardTaskEditPane.
     */
    header: string;
    /**
     * Represents the save button of the TaskBoardTaskEditPane.
     */
    saveButton: React.ReactNode;
    /**
     * Represents the cancel button of the TaskBoardTaskEditPane.
     */
    cancelButton: React.ReactNode;
    /**
     * Represents the titleInput title of the TaskBoardTaskEditPane.
     */
    titleInputTitle: string;
    /**
     * Represents the descriptionInput title of the TaskBoardTaskEditPane.
     */
    descriptionInputTitle: string;
    /**
     * Represents the priorityDropDownTitle title of the TaskBoardTaskEditPane.
     */
    priorityDropDownTitle: string;
    /**
     * Represents the title label of the TaskBoardTaskEditPane.
     */
    titleLabel: React.ReactNode;
    /**
     * Represents the description label of the TaskBoardTaskEditPane.
     */
    descriptionLabel: React.ReactNode;
    /**
     * Represents the priority label of the TaskBoardTaskEditPane.
     */
    priorityLabel: React.ReactNode;
    /**
     * Represents the rendered task of the TaskBoardTaskEditPane.
     */
    task?: TaskBoardTaskModel;
    /**
     * Determines the priority.
     */
    priority: TaskBoardPriority;
    /**
     * Determines the rendered priorities.
     */
    priorities: TaskBoardPriority[];
    /**
     * Represents the title of the TaskBoardTaskEditPane.
     */
    title: string;
    /**
     * The rendered description.
     */
    description: string;
    /**
     * Fires when Save button is clicked.
     */
    onSave: (event: React.MouseEvent<HTMLButtonElement>) => void;
    /**
     * Fires when Cancel button is clicked.
     */
    onClose: (event: React.MouseEvent<HTMLButtonElement>) => void;
    /**
     * Fires when a title is changed.
     */
    onTitleChange: (event: InputChangeEvent) => void;
    /**
     * Fires when a description is changed.
     */
    onDescriptionChange: (event: InputChangeEvent) => void;
    /**
     * Fires when a priority has been changed.
     */
    onPriorityChange: (event: DropDownListChangeEvent) => void;
}
/**
 * Represents the TaskBoardTaskEditPane component.
 */
export declare const TaskBoardTaskEditPane: React.FunctionComponent<TaskBoardTaskEditPaneProps>;
