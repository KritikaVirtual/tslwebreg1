import * as React from 'react';
import { useLocalization } from '@progress/kendo-react-intl';
import { messages, taskBoardEditCardPaneTitle, taskBoardEditCardPaneSaveBtn, taskBoardEditPaneCancelBtn, taskBoardEditPaneTitleLabel, taskBoardEditPaneDescriptionLabel, taskBoardEditPanePriorityLabel, taskBoardAddCardTitleLabel, taskBoardAddCardDescriptionLabel, taskBoardAddCardPriorityLabel } from './messages';
import { useTaskEditing } from './hooks/taskEditing';
/**
 * Represents the TaskBoardEditCard component.
 */
export var TaskBoardEditCard = function (props) {
    var _a = useTaskEditing(props), onTitleChange = _a.onTitleChange, title = _a.title, onDescriptionChange = _a.onDescriptionChange, description = _a.description, onPriorityChange = _a.onPriorityChange, priority = _a.priority, onSave = _a.onSave;
    var localization = useLocalization();
    return (React.createElement(props.editPane, { header: localization.toLanguageString(taskBoardEditCardPaneTitle, messages[taskBoardEditCardPaneTitle]) + props.task.title, titleInputTitle: localization.toLanguageString(taskBoardAddCardTitleLabel, messages[taskBoardAddCardTitleLabel]), descriptionInputTitle: localization.toLanguageString(taskBoardAddCardDescriptionLabel, messages[taskBoardAddCardDescriptionLabel]), priorityDropDownTitle: localization.toLanguageString(taskBoardAddCardPriorityLabel, messages[taskBoardAddCardPriorityLabel]), task: props.task, saveButton: localization.toLanguageString(taskBoardEditCardPaneSaveBtn, messages[taskBoardEditCardPaneSaveBtn]), cancelButton: localization.toLanguageString(taskBoardEditPaneCancelBtn, messages[taskBoardEditPaneCancelBtn]), priorities: props.priorities, titleLabel: localization.toLanguageString(taskBoardEditPaneTitleLabel, messages[taskBoardEditPaneTitleLabel]), descriptionLabel: localization.toLanguageString(taskBoardEditPaneDescriptionLabel, messages[taskBoardEditPaneDescriptionLabel]), priorityLabel: localization.toLanguageString(taskBoardEditPanePriorityLabel, messages[taskBoardEditPanePriorityLabel]), onSave: onSave, onClose: props.onClose, onTitleChange: onTitleChange, title: title, onDescriptionChange: onDescriptionChange, description: description, onPriorityChange: onPriorityChange, priority: priority }));
};
var defaultProps = {};
TaskBoardEditCard.propTypes = {};
TaskBoardEditCard.defaultProps = defaultProps;
TaskBoardEditCard.displayName = 'KendoReactTaskBoardEditCard';
