import * as React from 'react';
import { InputChangeEvent } from '@progress/kendo-react-inputs';
import { TaskBoardAddCardProps } from './../TaskBoardAddCard';
import { TaskBoardEditCardProps } from './../TaskBoardEditCard';
import { TaskBoardConfirmDialogProps } from './../TaskBoardConfirmDialog';
import { TaskBoardCardProps } from './../card/Card';
import { TaskBoardColumnHeaderProps } from './ColumnHeader';
import { TaskBoardColumnBodyProps } from './ColumnBody';
import { TaskBoardColumnModel, TaskBoardPriority, TaskBoardTaskModel } from '../TaskBoard';
/**
 * Represents the props of the TaskBoardColumn component
 */
export interface TaskBoardColumnProps {
    /**
     * The column of the TaskBoard.
     */
    column: TaskBoardColumnModel;
    /**
     * The tasks of the TaskBoard.
     */
    tasks: TaskBoardTaskModel[];
    /**
     * The priorities that are set in the TaskBoard.
     */
    priorities: TaskBoardPriority[];
    /**
     * The styles for the TaskBoard.
     */
    style?: React.CSSProperties;
    /**
     * Specifies the `tabIndex` that will be added to the TaskBoard Column element.
     */
    tabIndex?: number;
    /**
     * Represents the reference of the element.
     */
    elementRef?: React.RefObject<HTMLDivElement>;
    /**
     * Determines the visibility of the add card.
     */
    showAddCard: boolean;
    /**
     * Determines the visibility of the edit card.
     */
    showEditCard: boolean;
    /**
     * Determines the visibility of the column confirm/delete.
     */
    showColumnConfirmDelete: boolean;
    /**
     * Specifies the edited task.
     */
    editedTask?: TaskBoardTaskModel;
    /**
     * Specifies the confirm dialog message
     */
    confirmDialogMessage: React.ReactNode;
    /**
     * Specifies the confirm dialog confirm button node.
     */
    confirmDialogConfirmButton: React.ReactNode;
    /**
     * Specifies the cancel dialog confirm button node.
     */
    confirmDialogCancelButton: React.ReactNode;
    /**
     * Specifies the confirm dialog title.
     */
    confirmDialogTitle: string;
    /**
     * Specifies the edit button title.
     */
    editButtonTitle: string;
    /**
     * Specifies the add button title.
     */
    addButtonTitle: string;
    /**
     * Specifies the close button title.
     */
    closeButtonTitle: string;
    /**
     * Determines the children nodes.
     */
    children: React.ReactNode;
    /**
     * Fire on task creation.
     */
    onTaskCreate: (task: TaskBoardTaskModel) => void;
    /**
     * Fires when task is edited.
     */
    onTaskEdit: (task: TaskBoardTaskModel, prevTask: TaskBoardTaskModel) => void;
    /**
     * Fires when task is deleted.
     */
    onTaskDelete: (task: TaskBoardTaskModel) => void;
    /**
     * Fires when title is changed.
     */
    onTitleChange?: (event: InputChangeEvent) => void;
    /**
     * Fires when column enters edit.
     */
    onColumnEnterEdit: (event: React.MouseEvent<HTMLButtonElement>) => void;
    /**
     * Fires when column exits edit.
     */
    onColumnExitEdit: (event: React.FocusEvent<HTMLInputElement>) => void;
    /**
     * Fires on confirmation of column deletion.
     */
    onColumnConfirmDelete: (event: React.MouseEvent<HTMLButtonElement>) => void;
    /**
     * Fires when the add card dialog is shown.
     */
    onShowAddCardDialog: (event: React.MouseEvent<HTMLButtonElement>) => void;
    /**
     * Fires when the edit card pane is shown.
     */
    onShowEditCardPane: (task: TaskBoardTaskModel) => void;
    /**
     * Fires on column deletion.
     */
    onColumnDelete: (event: React.MouseEvent<HTMLButtonElement>) => void;
    /**
     * The Close Button click event handler of the TaskBoardConfirmDialog component.
     */
    onCloseDialog: (event: React.MouseEvent<HTMLButtonElement>) => void;
    /**
     * Represents the TaskBoardCard component.
     */
    card: React.ComponentType<TaskBoardCardProps>;
    /**
     * Represents the TaskBoardColumnHeader component.
     */
    header: React.ComponentType<TaskBoardColumnHeaderProps>;
    /**
     * Represents the TaskBoardColumnBody component.
     */
    body: React.ComponentType<TaskBoardColumnBodyProps>;
    /**
     * Represents the TaskBoardConfirmDialog component.
     */
    confirmDialog: React.ComponentType<TaskBoardConfirmDialogProps>;
    /**
     * Represents the TaskBoardEditCard component.
     */
    editCardDialog: React.ComponentType<TaskBoardEditCardProps>;
    /**
     * Represents the TaskBoardAddCard component.
     */
    addCardDialog: React.ComponentType<TaskBoardAddCardProps>;
}
/**
 * Represents the TaskBoardColumn component.
 */
export declare const TaskBoardColumn: React.FunctionComponent<TaskBoardColumnProps>;
