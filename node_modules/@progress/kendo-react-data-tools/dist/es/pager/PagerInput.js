var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as React from 'react';
import { registerForLocalization, provideLocalizationService, provideIntlService } from '@progress/kendo-react-intl';
import { messages, pagerOf, pagerPage, pagerTotalPages } from './../messages';
import { NumericTextBox } from '@progress/kendo-react-inputs';
/**
 * @hidden
 */
var PagerInput = /** @class */ (function (_super) {
    __extends(PagerInput, _super);
    function PagerInput() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = { page: _this.props.currentPage };
        _this.handleOnChange = function (e) {
            _this.setState({ page: e.target.value });
            if (e.target.value) {
                _this.props.pageChange(e.target.value, e);
            }
        };
        return _this;
    }
    PagerInput.prototype.render = function () {
        var intlService = provideIntlService(this);
        var localizationService = provideLocalizationService(this);
        var pageMessage = this.props.messagesMap ? this.props.messagesMap(pagerPage) :
            ({ messageKey: pagerPage, defaultMessage: messages[pagerPage] });
        var ofMessage = this.props.messagesMap ? this.props.messagesMap(pagerOf) :
            ({ messageKey: pagerOf, defaultMessage: messages[pagerOf] });
        var totalPagesMessage = this.props.messagesMap ? this.props.messagesMap(pagerTotalPages) :
            ({ messageKey: pagerTotalPages, defaultMessage: messages[pagerTotalPages] });
        return (React.createElement(React.Fragment, null,
            React.createElement("span", { className: "k-pager-input" },
                React.createElement("span", null, localizationService.toLanguageString(pageMessage.messageKey, pageMessage.defaultMessage)),
                React.createElement(NumericTextBox, { value: this.props.currentPage !== undefined ? this.props.currentPage : this.state.page, onChange: this.handleOnChange, min: 1, spinners: false }),
                React.createElement("span", null, "".concat(localizationService.toLanguageString(ofMessage.messageKey, ofMessage.defaultMessage), " ").concat(intlService
                    .format(localizationService.toLanguageString(totalPagesMessage.messageKey, totalPagesMessage.defaultMessage), [
                    this.props.totalPages
                ]))))));
    };
    return PagerInput;
}(React.Component));
export { PagerInput };
registerForLocalization(PagerInput);
