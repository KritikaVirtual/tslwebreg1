"use strict";
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.observersReducer = exports.optionsReducer = void 0;
/**
 * @hidden
 */
var optionsReducer = function (currentState, action) {
    if (action.barcodeKey) {
        return reducers.configurationItem(currentState, action);
    }
    else {
        return {};
    }
};
exports.optionsReducer = optionsReducer;
/**
 * @hidden
 */
var observersReducer = function (currentState, action) {
    if (action.type) {
        switch (action.type) {
            case 'add':
                return __spreadArray(__spreadArray([], currentState, true), [action.payload], false);
            case 'remove':
                return currentState.filter(function (element) { return element !== action.payload; });
            default:
                return currentState;
        }
    }
    else {
        return [];
    }
};
exports.observersReducer = observersReducer;
/**
 * @hidden
 */
var reducers = {
    configurationItem: function (currentState, action) {
        var _a;
        return Object.assign(currentState, (_a = {},
            _a[action.barcodeKey] = action.payload,
            _a));
    }
};
